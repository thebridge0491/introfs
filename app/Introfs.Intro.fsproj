<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Version Condition=" '$(Version)' =='' ">0.1.0</Version>
    <Authors Condition=" '$(Authors)' =='' ">thebridge0491</Authors>
    <Company Condition=" '$(Company)' =='' ">org.sandbox</Company>
    <AssemblyTitle Condition=" '$(AssemblyTitle)' =='' ">$(AssemblyName)</AssemblyTitle>
    <Description Condition=" '$(Description)' =='' ">Main app sub-package for FSharp Intro examples project.</Description>
    <Copyright Condition=" '$(Copyright)' =='' ">Copyright (c) 2021, $(Authors)</Copyright>
    <PackageLicenseExpression Condition=" '$(PackageLicenseExpression)' =='' ">Apache-2.0</PackageLicenseExpression>
    <PackageProjectUrl Condition=" '$(PackageProjectUrl)' =='' ">https://bitbucket.org/thebridge0491/introfs</PackageProjectUrl>
    <PackageTags Condition=" '$(PackageTags)' =='' ">demo intro development practice</PackageTags>
    <PackageReleaseNotes>Summary of changes made in this release of the package -- none.</PackageReleaseNotes>

    <OutputType>exe</OutputType>
    <AssemblyOriginatorKeyFile Condition=" '$(OutputType)' == 'library' Or '$(OutputType)' == 'exe'">codesign.snk.pub</AssemblyOriginatorKeyFile>
    <SignAssembly Condition=" '$(AssemblyOriginatorKeyFile)' != '' ">true</SignAssembly>
    <DelaySign Condition=" '$(AssemblyOriginatorKeyFile)' != '' ">true</DelaySign>
    <ExeLauncher Condition=" '$(OS)' != 'Windows_NT' ">mono</ExeLauncher>
    <TargetFramework Condition=" '$(TargetFramework)' == '' ">net471</TargetFramework>

    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    <AdditionalLibPaths>$(HOME)/nuget/packages</AdditionalLibPaths>
    <StartupObject Condition=" '$(OutputType)' == 'exe' And '$(StartupObject)' == '' ">$(AssemblyName).App</StartupObject>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="microsoft.netframework.referenceassemblies" Version="1.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime;build;native;contentfiles;analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Condition=" 'netstandard2.0' == '$(TargetFramework)' "
      Include="netstandard.library"/>
    <PackageReference Include="fsharp.core"/>
    <PackageReference Include="log4net"/>
    <PackageReference Include="ini-parser-netstandard"/>
    <PackageReference Include="system.diagnostics.textwritertracelistener"/>
    <PackageReference Include="mono.options"/>
    <PackageReference Include="newtonsoft.json"/>
    <PackageReference Include="yamldotnet"/>

    <!--<PackageReference Include="mono.gendarme"/>-->
    <!--<PackageReference Include="ilrepack"/>-->

    <Reference Include="introfs.util">
      <HintPath Condition=" 'netcoreapp2.0' == '$(TargetFramework)' ">$(HOME)/nuget/packages/Introfs.Util/lib/netstandard2.0/Introfs.Util.dll</HintPath>
      <HintPath Condition=" 'netcoreapp2.0' != '$(TargetFramework)' ">$(HOME)/nuget/packages/Introfs.Util/lib/$(TargetFramework)/Introfs.Util.dll</HintPath>
    </Reference>
    <Reference Include="introfs.practice">
      <HintPath Condition=" 'netcoreapp2.0' == '$(TargetFramework)' ">$(HOME)/nuget/packages/Introfs.Practice/lib/netstandard2.0/Introfs.Practice.dll</HintPath>
      <HintPath Condition=" 'netcoreapp2.0' != '$(TargetFramework)' ">$(HOME)/nuget/packages/Introfs.Practice/lib/$(TargetFramework)/Introfs.Practice.dll</HintPath>
    </Reference>
    <PackageReference Include="introfs.util" Version="[0.1.0,)"/>
    <PackageReference Include="introfs.practice" Version="[0.1.0,)"/>
    <Reference Include="introfs.intro.csharp">
	  <Private>True</Private>
	  <HintPath Condition=" 'netcoreapp2.0' == '$(TargetFramework)' ">bin/$(Configuration)/netstandard2.0/Introfs.Intro.CSharp.dll</HintPath>
      <HintPath Condition=" 'netcoreapp2.0' != '$(TargetFramework)' ">bin/$(Configuration)/$(TargetFramework)/Introfs.Intro.CSharp.dll</HintPath>
	</Reference>
  </ItemGroup>

  <ItemGroup>
    <!--<ProjectReference Include="src/fs/*.*proj"/>-->
    <Content Include="LICENSE">
      <Pack>true</Pack>
      <PackagePath>LICENSE</PackagePath>
    </Content>
    <Content Include="resources/*.*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackageCopyToOutput>true</PackageCopyToOutput>
    </Content>
    <EmbeddedResource Include="resources/*.*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <LogicalName>$(AssemblyName).resources.%(filename)%(extension)</LogicalName>
    </EmbeddedResource>
    <!--<None Include="resources/*.*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>-->
  </ItemGroup>
  <ItemGroup Condition=" 'netstandard2.0' == '$(TargetFramework)' ">
    <None Include="$(HOME)/nuget/packages/NETStandard.Library/build/netstandard2.0/ref/netstandard.dll">
      <Link>%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="$(HOME)/nuget/packages/FSharp.Core/lib/netstandard2.0/FSharp.Core.dll">
      <Link>%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Compile Condition=" '$(OutputType)' == 'library' Or '$(OutputType)' == 'exe' "
      Include="src/**/*.fs" Exclude="src/**/App.fs"/>
    <Compile Condition=" '$(OutputType)' != 'library' And '$(OutputType)' != 'exe' "
      Include="src/**/*.fs" Exclude="src/**/App.fs;src/**/properties/*.fs"/>
    <Compile Include="src/**/App.fs"/>
    <MixProjects Include="$(MSBuildProjectDirectory)/src/*/*.*proj"/>
  </ItemGroup>

  <!--<ItemGroup Condition=" '@(MixProjects)' != '' And '$(OutputType)' == 'module'">
    <AddModules Include="bin/$(Configuration)/net471/$(AssemblyName).netmodule"/>
    <AddModules Include="bin/$(Configuration)/net471/$(AssemblyName).*.netmodule"/>
  </ItemGroup>
  <ItemGroup Condition=" '@(MixProjects)' != '' And '$(OutputType)' != 'module'">
    <InputAssemblies Include="bin/$(Configuration)/net471/$(AssemblyName).exe" Condition=" '$(OutputType)' == 'exe' "/>
    <InputAssemblies Include="bin/$(Configuration)/net471/$(AssemblyName).dll" Condition=" '$(OutputType)' == 'library' "/>
    <InputAssemblies Include="bin/$(Configuration)/net471/$(AssemblyName).*.dll"/>
  </ItemGroup>-->

  <Import Project="targetsmsbuild/Tools.*.targets"/>
  <!--<Import Condition=" Exists('src/cs/$(AssemblyName).CSharp.csproj') "
    Project="targetsmsbuild/CombineProducts.targets"/>-->
  <!-- To modify your build process, add your task inside one of the targets
      below and uncomment it. Other similar extension points exist, see
      Microsoft.Common.targets. -->
  <!--<Target Name="BeforeBuild"></Target>
  <Target Name="AfterBuild"></Target>-->
  <Target Name="AfterClean">
	  <RemoveDir Directories="$(OutputPath);$(IntermediateOutputPath)"/>
  </Target>
  <Target Name="_BuildMixProjects" AfterTargets="BeforeBuild">
	  <MSBuild Projects="@(MixProjects)" RunEachTargetSeparately="true"
      Targets="Restore;Build" Properties="ParentProjectDir=$(MSBuildProjectDirectory)/"/>
  </Target>

</Project>
  <!-- display targets without leading underscore:
    msbuild /nologo /pp | sed -n '/^[ ]*<Target Name="[a-zA-Z]*"/ s|\(Target Name="[a-zA-Z]*"\).*|\1|p' | sort -->
  <!-- debug context: gdb -args mono -debug ... # lldb ; ddd -gdb; gdb
       valgrind context: valgrind -verbose -tool=memcheck -suppressions=resources/mono.supp mono -debug ...
  -->
  <!-- nuspec generated with msbuild /t:pack or msbuild /t:generatenuspec:
    msbuild [/p:nuspecoutpath=obj/$(Configuration)] /t:generatenuspec
  -->
