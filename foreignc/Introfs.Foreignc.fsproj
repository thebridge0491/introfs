<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Version Condition=" '$(Version)' =='' ">0.1.0</Version>
    <Authors Condition=" '$(Authors)' =='' ">thebridge0491</Authors>
    <Company Condition=" '$(Company)' =='' ">org.sandbox</Company>
    <AssemblyTitle Condition=" '$(AssemblyTitle)' =='' ">$(AssemblyName)</AssemblyTitle>
    <Description Condition=" '$(Description)' =='' ">FFI sub-package for FSharp Intro examples project.</Description>
    <Copyright Condition=" '$(Copyright)' =='' ">Copyright (c) 2021, $(Authors)</Copyright>
    <PackageLicenseExpression Condition=" '$(PackageLicenseExpression)' =='' ">Apache-2.0</PackageLicenseExpression>
    <!--<PackageLicenseUrl>file:///LICENSE</PackageLicenseUrl>-->
    <PackageLicenseUrl>https://opensource.org/licenses/Apache-2.0</PackageLicenseUrl>
    <PackageProjectUrl Condition=" '$(PackageProjectUrl)' =='' ">https://bitbucket.org/thebridge0491/introfs</PackageProjectUrl>
    <PackageTags Condition=" '$(PackageTags)' =='' ">demo intro development pinvoke foreign</PackageTags>
    <PackageReleaseNotes>Summary of changes made in this release of the package -- none.</PackageReleaseNotes>

    <OutputType Condition=" '$(OutputType)' == '' ">library</OutputType>
    <AssemblyOriginatorKeyFile Condition=" '$(OutputType)' == 'library' Or '$(OutputType)' == 'exe'">snkeyfile.snk.pub</AssemblyOriginatorKeyFile>
    <SignAssembly Condition=" '$(AssemblyOriginatorKeyFile)' != '' ">true</SignAssembly>
    <DelaySign Condition=" '$(AssemblyOriginatorKeyFile)' != '' ">true</DelaySign>
    <ExeLauncher Condition=" '$(OS)' != 'Windows_NT' ">mono</ExeLauncher>
    <TargetFramework Condition=" '$(TargetFramework)' == '' ">net471</TargetFramework>

    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    <AdditionalLibPaths>$(HOME)\nuget\packages</AdditionalLibPaths>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="fsharp.core"/>
    <!--<PackageReference Include="log4net"/>-->
    <!--<PackageReference Include="ini-parser"/>-->

    <!--<PackageReference Include="mono.gendarme"/>-->
    <!--<PackageReference Include="ilrepack"/>-->

    <!--<Reference Include="introfs.util">
	    <HintPath>$(HOME)\nuget\packages\Introfs.Util\lib\$(TargetFramework)\Introfs.Util.dll</HintPath>
    </Reference>-->
    <HintPath_introfs_util Include="$(HOME)\nuget\packages\**\*\Introfs.Util.dll"/>
    <Reference Include="introfs.util">
	    <HintPath>@(HintPath_introfs_util->'%(FullPath)', ' ')</HintPath>
    </Reference>
    <PackageReference Include="introfs.util" Version="[0.1.0,)"/>
  </ItemGroup>

  <ItemGroup>
    <!--<ProjectReference Include="src\fs\*.*proj"/>-->
    <Content Include="LICENSE">
      <Pack>true</Pack>
      <PackagePath>LICENSE</PackagePath>
    </Content>
    <Content Include="resources\*.*" Exclude="resources\App.config">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackageCopyToOutput>true</PackageCopyToOutput>
    </Content>
    <EmbeddedResource Include="resources\*.*" Exclude="resources\App.config">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <LogicalName>$(AssemblyName).resources.%(filename)%(extension)</LogicalName>
    </EmbeddedResource>
    <!--<None Include="resources\*.*" Exclude="resources\App.config">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>-->
  </ItemGroup>

  <ItemGroup>
    <Compile Condition=" '$(OutputType)' == 'library' Or '$(OutputType)' == 'exe' "
      Include="src\**\*.fs" Exclude="src\**\App.fs"/>
    <Compile Condition=" '$(OutputType)' != 'library' And '$(OutputType)' != 'exe' "
      Include="src\**\*.fs" Exclude="src\**\App.fs;src\**\properties\*.fs"/>
    <!--<Compile Include="src\**\App.fs"/>-->
    <MixProjects Include="$(ProjectDir)src\*\*.*proj"/>
  </ItemGroup>

  <!--<ItemGroup Condition=" '@(MixProjects)' != '' And '$(OutputType)' == 'module'">
    <AddModules Include="$(TargetDir)$(AssemblyName).netmodule"/>
    <AddModules Include="$(TargetDir)$(AssemblyName).*.netmodule"/>
  </ItemGroup>
  <ItemGroup Condition=" '@(MixProjects)' != '' And '$(OutputType)' != 'module'">
    <InputAssemblies Include="$(TargetDir)$(AssemblyName).exe" Condition=" '$(OutputType)' == 'exe' "/>
    <InputAssemblies Include="$(TargetDir)$(AssemblyName).dll" Condition=" '$(OutputType)' == 'library' "/>
    <InputAssemblies Include="$(TargetDir)$(AssemblyName).*.dll"/>
  </ItemGroup>-->

  <Import Project="targetsmsbuild\Tools.*.targets"/>
  <!--<Import Condition=" Exists('src\cs\$(AssemblyName).CSharp.csproj') "
    Project="targetsmsbuild\CombineProducts.targets"/>-->
  <!-- To modify your build process, add your task inside one of the targets
      below and uncomment it. Other similar extension points exist, see
      Microsoft.Common.targets. -->
  <!--<Target Name="BeforeBuild"></Target>
  <Target Name="AfterBuild"></Target>-->
  <!--<Target Name="AuxFfi" DependsOnTargets="PrepareForBuild">
    <PropertyGroup>
      <MAKECMD Condition=" '$(MAKECMD)' == '' ">make</MAKECMD>
    </PropertyGroup>
    <Exec WorkingDirectory="$(ProjectDir)" IgnoreExitCode="true"
        Command="$(MAKECMD) -B -f Makefile-auxffi.mk auxffi"/>
  </Target>-->
  <Target Name="AfterClean">
	  <RemoveDir Directories="$(OutputPath);$(IntermediateOutputPath)"/>
  </Target>
  <Target Name="_BuildMixProjects" AfterTargets="BeforeBuild">
	  <MSBuild Projects="@(MixProjects)" RunEachTargetSeparately="true"
      Targets="Restore;Build" Properties="ParentProjectDir=$(ProjectDir)"/>
  </Target>

</Project>
  <!-- display targets without leading underscore:
    msbuild /nologo /pp | sed -n '/^[ ]*<Target Name="[a-zA-Z]*"/ s|\(Target Name="[a-zA-Z]*"\).*|\1|p' | sort -->
  <!-- debug context: gdb -args mono -debug ... # lldb ; ddd -gdb; gdb
       valgrind context: valgrind -verbose -tool=memcheck -suppressions=resources/mono.supp mono -debug ...
  -->
